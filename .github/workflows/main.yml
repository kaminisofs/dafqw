name: VNC Server with Cloudflare Tunnel
on: [workflow_dispatch]
jobs:
  vnc:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tightvncserver xfce4 xfce4-goodies websockify
        
    - name: Setup VNC
      run: |
        mkdir -p ~/.vnc
        echo "password" | vncpasswd -f > ~/.vnc/passwd
        chmod 600 ~/.vnc/passwd
        cat > ~/.vnc/xstartup << EOF
        #!/bin/bash
        unset SESSION_MANAGER
        unset DBUS_SESSION_BUS_ADDRESS
        exec startxfce4
        EOF
        chmod +x ~/.vnc/xstartup
        vncserver :1 -geometry 1280x720 -depth 24
        
    - name: Download noVNC
      run: |
        git clone https://github.com/novnc/noVNC.git
        cd noVNC
        git checkout v1.4.0
        
    - name: Start websockify
      run: |
        websockify --web=noVNC 6080 localhost:5901 &
        
    - name: Download cloudflared
      run: |
        curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -o cloudflared.deb
        sudo dpkg -i cloudflared.deb
        
    - name: Start Cloudflare Tunnel
      id: tunnel
      run: |
        # cloudflaredをバックグラウンドで起動し、ログをファイルに保存
        cloudflared tunnel --url http://localhost:6080 > tunnel.log 2>&1 &
        CLOUDFLARED_PID=$!
        
        # トンネルが起動するのを待つ
        echo "Waiting for Cloudflare Tunnel to start..."
        for i in {1..30}; do
          if grep -q "trycloudflare.com" tunnel.log; then
            echo "Cloudflare Tunnel is ready!"
            break
          fi
          echo "Waiting... ($i/30)"
          sleep 2
        done
        
        # トンネルURLを抽出
        URL=$(grep -o 'https://[^ ]*\.trycloudflare\.com' tunnel.log | head -1)
        if [ -z "$URL" ]; then
          echo "Failed to get tunnel URL. Log content:"
          cat tunnel.log
          exit 1
        fi
        
        echo "tunnel_url=$URL" >> $GITHUB_OUTPUT
        echo "Cloudflare Tunnel PID: $CLOUDFLARED_PID" >> $GITHUB_OUTPUT
        
    - name: Display connection info
      run: |
        echo "================================"
        echo "VNC Connection Information"
        echo "================================"
        echo "URL: ${{ steps.tunnel.outputs.tunnel_url }}"
        echo "Password: password"
        echo "================================"
        echo "Waiting for connection..."
        echo "Full tunnel log:"
        cat tunnel.log
        
    - name: Keep alive
      run: |
        sleep 3600
